[
  {
    "objectID": "cv.html",
    "href": "cv.html",
    "title": "Jordan Chong",
    "section": "",
    "text": "hello"
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "My Blog",
    "section": "",
    "text": "Order By\n      Default\n      \n        Title\n      \n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nAn Analysis of Market Trends\n\n\n\nQuant\n\nFinance\n\nPython\n\n\n\nA deep dive into recent market trends using Python’s data analysis libraries to uncover hidden patterns.\n\n\n\n\n\nSep 26, 2025\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jordan Chong",
    "section": "",
    "text": "I am a [Your Role] passionate about [Your Interests]. This website contains my projects, research, and writings. I am currently a student at Singapore Management University.\n##READ MORE →"
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "My Projects",
    "section": "",
    "text": "Gap Challenge Solver\n\n\n\nPython\n\nComputer Vision\n\nWeb App\n\n\n\nAn interactive web tool to solve the Gap Challenge puzzle using Python and OpenCV.\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/gap-challenge-solver/index.html",
    "href": "projects/gap-challenge-solver/index.html",
    "title": "Gap Challenge Solver",
    "section": "",
    "text": "This is where you write the main content describing your project…"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Contact \n\n\n\n&lt;label for=\"full-name\" style=\"display: block; margin-bottom: 0.5em;\"&gt;Full Name&lt;/label&gt;\n&lt;input type=\"text\" id=\"full-name\" name=\"name\" required style=\"width: 100%; padding: 0.5em;\"&gt;\n\n\n&lt;label for=\"email-address\" style=\"display: block; margin-bottom: 0.5em;\"&gt;Email Address&lt;/label&gt;\n&lt;input type=\"email\" id=\"email-address\" name=\"_replyto\" required style=\"width: 100%; padding: 0.5em;\"&gt;\n\n\n&lt;label for=\"message\" style=\"display: block; margin-bottom: 0.5em;\"&gt;Message&lt;/label&gt;\n&lt;textarea id=\"message\" name=\"message\" rows=\"6\" required style=\"width: 100%; padding: 0.5em;\"&gt;&lt;/textarea&gt;\n\n\nSend Message"
  },
  {
    "objectID": "projects/gap-challenge-solver/AON Gap Challenge.html",
    "href": "projects/gap-challenge-solver/AON Gap Challenge.html",
    "title": "JavaScript",
    "section": "",
    "text": "import streamlit as st\nfrom PIL import Image\nimport cv2\nimport numpy as np\nimport os\nimport base64\nfrom io import BytesIO\n\n# --- MODIFIED: Import using the new alias as requested ---\nfrom streamlit_paste_button import paste_image_button as pbutton\n\n2025-09-26 17:10:59.671 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n# --- App Configuration ---\nst.set_page_config(page_title=\"Gap Challenge Solver\", layout=\"wide\")\n\n# ==============================================================================\n# --- CONFIGURATION ---\n# ==============================================================================\nCONFIDENCE_THRESHOLD_SHAPE = 0.60\nBLANK_STD_DEV_THRESHOLD = 15.0   \nTEMPLATE_DIR = \"templates\"\nWHITE_THRESHOLD = 240\n\n2025-09-26 17:10:59.679 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode."
  },
  {
    "objectID": "projects/gap-challenge-solver/AON Gap Challenge.html#image-recognition-and-solver",
    "href": "projects/gap-challenge-solver/AON Gap Challenge.html#image-recognition-and-solver",
    "title": "JavaScript",
    "section": "Image Recognition and Solver",
    "text": "Image Recognition and Solver\n\ndef find_empty(board):\n    for r in range(len(board)):\n        for c in range(len(board[0])):\n            if board[r][c] == 'blank':\n                return (r, c)\n    return None\n\ndef solve_with_backtracking(board, all_shapes):\n    find = find_empty(board)\n    if not find: return True\n    row, col = find\n    for shape in all_shapes:\n        if shape in board[row] or shape in [board[i][col] for i in range(len(board))]: continue\n        board[row][col] = shape\n        if solve_with_backtracking(board, all_shapes): return True\n        board[row][col] = 'blank'\n    return False\n\ndef find_question_mark_solution(board, universe_of_shapes):\n    question_pos = None\n    for r in range(len(board)):\n        for c in range(len(board[0])):\n            if board[r][c] == '6question':\n                question_pos = (r, c)\n                break\n        if question_pos: break\n    if not question_pos:\n        st.error(\"No '6question' mark found on the board.\")\n        return None, None\n    board_copy = [row[:] for row in board]\n    qr, qc = question_pos\n    board_copy[qr][qc] = 'blank'\n    if solve_with_backtracking(board_copy, universe_of_shapes):\n        solution_shape = board_copy[qr][qc]\n        return solution_shape, board_copy\n    else:\n        return None, None\n\ndef crop_to_grid(source_image: np.ndarray):\n    gray = cv2.cvtColor(source_image, cv2.COLOR_BGR2GRAY)\n    _, thresh = cv2.threshold(gray, WHITE_THRESHOLD, 255, cv2.THRESH_BINARY_INV)\n    non_zero_pixels = cv2.findNonZero(thresh)\n    if non_zero_pixels is None: return source_image\n    x, y, w, h = cv2.boundingRect(non_zero_pixels)\n    return source_image[y:y+h, x:x+w]\n\ndef recognize_shape_in_cell(cell_roi_color, templates):\n    cell_roi_gray = cv2.cvtColor(cell_roi_color, cv2.COLOR_BGR2GRAY)\n    std_dev = np.std(cell_roi_gray)\n    if std_dev &lt; BLANK_STD_DEV_THRESHOLD: return \"blank\"\n    best_match = {'label': 'blank', 'score': -1.0}\n    for label, template_with_alpha in templates.items():\n        if template_with_alpha.shape[2] == 4:\n            mask = template_with_alpha[:,:,3]\n            template_color = cv2.cvtColor(template_with_alpha, cv2.COLOR_BGRA2BGR)\n        else:\n            template_color = template_with_alpha\n            template_gray_for_mask = cv2.cvtColor(template_color, cv2.COLOR_BGR2GRAY)\n            _, mask = cv2.threshold(template_gray_for_mask, 10, 255, cv2.THRESH_BINARY)\n        h, w, _ = template_color.shape\n        for scale in np.linspace(0.5, 1.0, 10):\n            scaled_h, scaled_w = int(h * scale), int(w * scale)\n            if not (scaled_h &gt; 0 and scaled_w &gt; 0 and scaled_h &lt;= cell_roi_color.shape[0] and scaled_w &lt;= cell_roi_color.shape[1]): continue\n            scaled_template = cv2.resize(template_color, (scaled_w, scaled_h))\n            scaled_mask = cv2.resize(mask, (scaled_w, scaled_h))\n            result = cv2.matchTemplate(cell_roi_color, scaled_template, cv2.TM_CCOEFF_NORMED, mask=scaled_mask)\n            _, max_val, _, _ = cv2.minMaxLoc(result)\n            if not np.isfinite(max_val): max_val = -1.0\n            if max_val &gt; best_match['score']:\n                best_match.update({'score': max_val, 'label': label})\n    final_label = 'blank'\n    if best_match['score'] &gt; CONFIDENCE_THRESHOLD_SHAPE:\n        final_label = best_match['label']\n    return final_label\n\ndef recognize_grid_and_options(image: Image.Image, grid_size: int, templates):\n    original_image = np.array(image.convert('RGB'))\n    original_image = cv2.cvtColor(original_image, cv2.COLOR_RGB2BGR)\n    border_size = 20\n    bordered_image = cv2.copyMakeBorder(original_image, top=border_size, bottom=border_size, left=border_size, right=border_size, borderType=cv2.BORDER_CONSTANT, value=[255, 255, 255])\n    cropped_color = crop_to_grid(bordered_image)\n    img_h, img_w, _ = cropped_color.shape\n    estimated_total_rows = grid_size + 1.1 \n    estimated_cell_h = img_h / estimated_total_rows\n    estimated_grid_h = int(estimated_cell_h * grid_size)\n    puzzle_area = cropped_color[:estimated_grid_h, :]\n    options_area = cropped_color[estimated_grid_h:, :]\n    puzzle_area = crop_to_grid(puzzle_area)\n    standard_size = 600\n    aligned_color_image = cv2.resize(puzzle_area, (standard_size, standard_size))\n    cell_height, cell_width = standard_size // grid_size, standard_size // grid_size\n    output_grid = [[\"\" for _ in range(grid_size)] for _ in range(grid_size)]\n    for r in range(grid_size):\n        for c in range(grid_size):\n            cell_roi = aligned_color_image[r*cell_height:(r+1)*cell_height, c*cell_width:(c+1)*cell_width]\n            output_grid[r][c] = recognize_shape_in_cell(cell_roi, templates)\n    universe_of_shapes = []\n    if options_area.shape[0] &gt; 10:\n        option_cell_h = options_area.shape[0]\n        option_cell_w_est = option_cell_h \n        num_options = round(options_area.shape[1] / option_cell_w_est)\n        cell_w_options = options_area.shape[1] // num_options\n        for i in range(num_options):\n            option_roi = options_area[:, i*cell_w_options:(i+1)*cell_w_options]\n            option_roi = cv2.resize(option_roi, (cell_width, cell_height))\n            shape_in_option = recognize_shape_in_cell(option_roi, templates)\n            if shape_in_option not in ['blank', '6question']:\n                universe_of_shapes.append(shape_in_option)\n    for r in range(grid_size):\n        for c in range(grid_size):\n            shape_in_grid = output_grid[r][c]\n            if shape_in_grid not in ['blank', '6question']:\n                universe_of_shapes.append(shape_in_grid)\n    if not universe_of_shapes:\n        universe_of_shapes = ['1circle','2triangle','3square','4cross','5star']\n    return output_grid, sorted(list(set(universe_of_shapes)))\n\ndef decode_base64_image(base64_string):\n    \"\"\"Decodes a base64 string into a PIL Image.\"\"\"\n    # Remove the \"data:image/png;base64,\" prefix\n    if \",\" in base64_string:\n        base64_string = base64_string.split(',')[1]\n    image_data = base64.b64decode(base64_string)\n    return Image.open(BytesIO(image_data))"
  },
  {
    "objectID": "projects/gap-challenge-solver/AON Gap Challenge.html#gap-solver",
    "href": "projects/gap-challenge-solver/AON Gap Challenge.html#gap-solver",
    "title": "JavaScript",
    "section": "Gap Solver",
    "text": "Gap Solver\n\n# def find_empty(board):\n#     \"\"\"Finds the first empty cell ('blank') in the board.\"\"\"\n#     for r in range(len(board)):\n#         for c in range(len(board[0])):\n#             if board[r][c] == 'blank':\n#                 return (r, c)\n#     return None\n\n# def solve_with_backtracking(board, all_shapes):\n#     \"\"\"Solves the puzzle using a recursive backtracking algorithm.\"\"\"\n#     find = find_empty(board)\n#     if not find:\n#         return True\n#     else:\n#         row, col = find\n\n#     for shape in all_shapes:\n#         if shape in board[row] or shape in [board[i][col] for i in range(len(board))]:\n#             continue\n#         board[row][col] = shape\n#         if solve_with_backtracking(board, all_shapes):\n#             return True\n#         board[row][col] = 'blank'\n#     return False\n\n# def find_question_mark_solution(board, universe_of_shapes):\n#     \"\"\"Finds the single shape that should replace the '6question' mark.\"\"\"\n#     print(\"\\n--- Starting Question Mark Solver ---\")\n#     question_pos = None\n#     for r in range(len(board)):\n#         for c in range(len(board[0])):\n#             if board[r][c] == '6question':\n#                 question_pos = (r, c)\n#                 break\n#         if question_pos: break\n            \n#     if not question_pos:\n#         print(\"No '6question' mark found on the board.\"); return None\n\n#     print(f\"Question mark found at position: {question_pos}\")\n#     board_copy = [row[:] for row in board]\n#     qr, qc = question_pos\n#     board_copy[qr][qc] = 'blank'\n\n#     print(f\"Dynamically detected shapes for this puzzle: {universe_of_shapes}\")\n\n#     if solve_with_backtracking(board_copy, universe_of_shapes):\n#         print(\"Solver found a complete solution for the grid.\")\n#         solution_shape = board_copy[qr][qc]\n#         return solution_shape\n#     else:\n#         print(\"Solver could not find a valid solution for the entire grid.\"); return None\n\n\n# ==============================================================================\n# --- STREAMLIT UI (MODIFIED TO USE PASTE BUTTON) ---\n# ==============================================================================\n\nst.title(\"🧩 Gap Challenge Solver\")\nst.info(\"To solve, take a screenshot of the puzzle, then click the button below and press Ctrl+V (or Cmd+V).\")\n\n# --- Sidebar for Controls ---\nwith st.sidebar:\n    st.header(\"Controls\")\n    grid_size = st.radio(\"Grid Size\", (4, 5), index=0)\n    is_aon = st.toggle(\"AON Puzzle\", value=True, help=\"This toggle is for future use and does not change the current shape templates.\")\n    \n# --- Main App Body ---\ncol1, col2 = st.columns(2)\n\nwith col1:\n    st.subheader(\"Your Puzzle\")\n    \n    # --- MODIFIED: Use the new pbutton component syntax ---\n    paste_result = pbutton(\"📋 Paste an image\")\n\n    # Use session state to keep track of the image\n    if \"pasted_image\" not in st.session_state:\n        st.session_state.pasted_image = None\n    \n    if paste_result.image_data is not None:\n        st.session_state.pasted_image = paste_result.image_data\n\n    if st.session_state.pasted_image:\n        st.image(st.session_state.pasted_image, caption=\"Pasted from Clipboard\", use_column_width=True)\n    else:\n        st.write(\"Awaiting a pasted image...\")\n\nwith col2:\n    st.subheader(\"Solution\")\n    # Run the analysis only if there is an image\n    if st.session_state.pasted_image:\n        with st.spinner(\"Analyzing puzzle...\"):\n            image = st.session_state.pasted_image\n            \n            shape_labels = ['1circle','2triangle','3square','4cross','5star','6question']\n            try:\n                templates = {\n                    label: cv2.imread(os.path.join(TEMPLATE_DIR, f\"{label}.png\"), cv2.IMREAD_UNCHANGED)\n                    for label in shape_labels\n                }\n                if any(t is None for t in templates.values()):\n                    st.error(f\"One or more template files are missing from the '{TEMPLATE_DIR}' directory.\")\n                    st.stop()\n            except Exception as e:\n                st.error(f\"Error loading template files: {e}\"); st.stop()\n            \n            initial_grid, detected_shapes = recognize_grid_and_options(image, grid_size, templates)\n            \n            if initial_grid and detected_shapes:\n                st.write(\"Detected Initial Grid:\")\n                st.table(initial_grid)\n                solution_shape, solved_grid = find_question_mark_solution(initial_grid, detected_shapes)\n                if solution_shape and solved_grid:\n                    st.success(\"Solution Found!\")\n                    st.metric(label=\"The shape for the '?' is\", value=solution_shape)\n                    st.write(\"Completed Grid:\")\n                    st.table(solved_grid)\n                else:\n                    st.error(\"Could not find a valid solution for this puzzle.\")\n    else:\n        st.write(\"Click the paste button and press Ctrl+V to see the solution.\")\n\n\n2025-09-26 17:10:59.778 WARNING streamlit.runtime.scriptrunner_utils.script_run_context: Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.801 \n\n  Warning: to view this Streamlit app on a browser, run it with the following\n\n  command:\n\n\n\n    streamlit run /Users/jordanchong/opt/anaconda3/lib/python3.13/site-packages/ipykernel_launcher.py [ARGUMENTS]\n\n2025-09-26 17:10:59.802 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.802 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.802 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.803 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.803 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.803 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.803 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.803 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.804 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.804 Session state does not function when running a script without `streamlit run`\n\n2025-09-26 17:10:59.804 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.804 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.805 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.805 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.805 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.805 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.806 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.806 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.806 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.806 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.807 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.807 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.938 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.938 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.938 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.938 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.939 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.939 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.939 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.939 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.939 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.939 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.940 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.940 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.940 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.940 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n2025-09-26 17:10:59.940 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n\n\n\n\n\nstreamlit run /Users/jordanchong/opt/anaconda3/lib/python3.13/site-packages/ipykernel_launcher.py\n\n\n  Cell In[6], line 1\n    streamlit run /Users/jordanchong/opt/anaconda3/lib/python3.13/site-packages/ipykernel_launcher.py\n              ^\nSyntaxError: invalid syntax"
  },
  {
    "objectID": "licence.html",
    "href": "licence.html",
    "title": "Licence",
    "section": "",
    "text": "The content on this website is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\n\n\nCreative Commons License Logo"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Hello! I’m Jordan Chong. This is where you can write a more detailed biography…"
  }
]